%YAML 1.2
---
meta:
  title: Digital currencies and securities
  description:
    This chapter discusses about storing digital securities on the behalf of a customer. The securities here refer to crypto securities, assets and digital currencies, like Bitcoin. Usually these protocols have only non-reversable transaction mechanism.

  background: |

    The services serving high amount of crypto securities are especially valuable cybercrime targets. The securities transactions are non-reversible and non-traceable, making stealing the securities, laundering and liquiding them an easy operation.

    Traditional credit and debit card backed transaction mechanism are usually reversible. Furthermore the institutions maintaining the balances have mechanism to address the stolen assets and the user funds are insured. Thus, the traditional transaction mechanism do not have the same issues to deal with.

questions:

  Cold wallet:
    question: Cold wallet maintains the most of assets offline
    rationale: In the case of the compromised service, the attacker cannot get access to all assets and only can steal minor part of them, severely limiting the damage. Most of the assets are stored offline, in a non-connected computer, which has only physical offline access in a safe location. Thus, the attack taking all the assets would need a physical access to this device, making over-the-internet attacks impossible.
    answers: default
    applies: everyone
    links:
      - Cold storage in Bitcoin Wiki, https://en.bitcoin.it/wiki/Cold_storage
    incidences:
      - bitstamp
      - cryptoine

  Transaction verification:
    question: Outgoing transactions are verified by heurestics
    rationale:
      Outgoing transactions are verified by heurestics, so that unusual transactions need manual verification or other human interaction.

      This prevents emptying the hot wallet in the case private keys or hot wallet API access is compromised.

      TODO

    links:
      - BitGo, https://www.bitgo.com/
      - BitGoD (Github), https://github.com/BitGo/bitgod
    incidences:
      - bitstamp

  Multisignature for major transactions:
    question: Minimum of two parties are required to make major a customer assets transfer
    applies: mle
    answers: default
    rationale: |
      A sole person alone should not be able to embezzle the customer assets.

      Digital currencies provide a multisignature mechanisms needing the approvement of at least two different parties to sign the transfer of the assets. Such a mechanism should be used any time a large fraction of customer assets are moved e.g. topping up the hot wallet from the cold wallet. This decreases the risk of corruption or blackmail attacks.

    links:
      - Multisignature (Bitcoin Wiki), https://en.bitcoin.it/wiki/Multisignature

  Race condition prevention:
    question: A systematic development method prevents race conditions
    answers: default
    rationale:
      A systematic development method is applied to all transactions, so that race conditions cannot exist in financial transactions.
      Otherwise exploiting a race condition allows the attacker to manipulate account balances.

      For all financial transactions

      * Optimistic database-level transaction isolation is applied or...

      * Pessimistic application level locks are applie

    incidences:
      - cryptoine

    links:
      - Lock (database) (Wikipedia), https://en.wikipedia.org/wiki/Lock_%28database%29
      - Race condition (Wikipedia), https://en.wikipedia.org/wiki/Race_condition
      - "Atomicity (Wikipedia), https://en.wikipedia.org/wiki/Atomicity_(database_systems)"
      - Transaction Isolation (PostgreSQL), http://www.postgresql.org/docs/9.1/static/transaction-iso.html
      - How I stole roughly 100 BTC from an exchange and how I could have stolen more, https://www.reddit.com/r/Bitcoin/comments/1wtbiu/how_i_stole_roughly_100_btc_from_an_exchange_and/
